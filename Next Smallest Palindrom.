//Given a number, in the form of an array Num[] of size N containing digits from 1 to 9(inclusive). The task is to find the next smallest palindrome strictly larger than the given number.

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class Solution {
public:
    vector<int> generateNextPalindrome(int num[], int n) {
        vector<int> result(num, num + n);

        // Helper function to check if all digits are 9
        auto allNines = [&](const vector<int>& vec) -> bool {
            for (int digit : vec) {
                if (digit != 9) return false;
            }
            return true;
        };

        // Case 1: All digits are 9
        if (allNines(result)) {
            vector<int> nextPalindrome(n + 1, 0);
            nextPalindrome[0] = nextPalindrome[n] = 1;
            return nextPalindrome;
        }

        // Step 2: Create a mirrored number
        int left = 0, right = n - 1;
        while (left <= right) {
            result[right] = result[left];
            left++;
            right--;
        }

        // Step 3: Check if the mirrored number is greater than the input
        bool isPalindromeGreater = false;
        for (int i = 0; i < n; ++i) {
            if (result[i] > num[i]) {
                isPalindromeGreater = true;
                break;
            } else if (result[i] < num[i]) {
                isPalindromeGreater = false;
                break;
            }
        }

        // If the mirrored number is greater, return it
        if (isPalindromeGreater) {
            return result;
        }

        // Step 4: Increment the middle part of the mirrored number
        left = (n - 1) / 2;
        right = n / 2;

        // Increment the middle digit(s)
        while (left >= 0 && result[left] == 9) {
            result[left] = result[right] = 0;
            left--;
            right++;
        }
        if (left >= 0) {
            result[left]++;
            result[right] = result[left];
        }

        return result;
    }
};

int main() {
    Solution solution;
    int num[] = {9, 4, 1, 8, 7, 9};
    int n = sizeof(num) / sizeof(num[0]);

    vector<int> nextPalindrome = solution.generateNextPalindrome(num, n);

    cout << "Next palindrome: ";
    for (int digit : nextPalindrome) {
        cout << digit;
    }
    cout << endl;

    return 0;
}
